{"version":3,"sources":["components/Navbar.jsx","components/Commit.jsx","context/github/githubContext.js","pages/Home.jsx","pages/About.jsx","pages/CommitInfo.jsx","context/alert/alertContext.js","components/Alert.jsx","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/githubState.js","App.js","index.js"],"names":["Navbar","className","exact","to","Commit","commit","message","sha","GithubContext","createContext","Home","useContext","loading","getCommits","commits","useEffect","map","About","href","target","CommitInfo","match","getCommit","info","urlSha","params","AlertContext","Alert","alert","hide","type","role","text","aria-label","onClick","aria-hidden","SHOW_ALERT","HIDE_ALERT","GET_COMMIT","GET_COMMITS","SET_LOADING","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","value","show","githubReducer","withCreds","url","process","GithubState","ref","a","setLoading","axios","get","response","data","App","basename","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d457feb.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport const Navbar = () => (\n  <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\n    <div className=\"navbar-brand\">Github Commits</div>\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item\">\n        <NavLink exact to=\"/\" className=\"nav-link\">\n          Home\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink to=\"/about\" className=\"nav-link\">\n          About\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const Commit = ({ commit }) => (\n  <div className=\"card\">\n    <div className=\"card-body\">\n      <h5 className=\"card-title\">{commit.commit.message}</h5>\n      <pre>{commit.sha}</pre>\n      <Link to={'/commit/' + commit.sha} className=\"btn btn-primary\">\n        More...\n      </Link>\n    </div>\n  </div>\n)\n","import { createContext } from 'react'\n\nexport const GithubContext = createContext()\n","import React, { useContext, useEffect, Fragment } from 'react'\nimport { Commit } from '../components/Commit'\n\nimport { GithubContext } from '../context/github/githubContext'\n\nexport const Home = () => {\n  const { loading, getCommits, commits } = useContext(GithubContext)\n\n  useEffect(() => {\n    getCommits()\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <Fragment>\n      {loading ? (\n        <p className=\"text-center\">Loading...</p>\n      ) : (\n        commits.map((commit) => (\n          <div className=\"mb-3\" key={commit.sha}>\n            <Commit commit={commit} />\n          </div>\n        ))\n      )}\n    </Fragment>\n  )\n}\n","import React from 'react'\n\nexport const About = () => {\n  return (\n    <div className=\"jumbotron\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">GitHub commits</h1>\n        <p className=\"lead\">\n          Application shows git commit history for the current project through\n          GitHub API\n        </p>\n        <h2>Objective</h2>\n        <p>\n          The goal of this project will be to create a web application that\n          shows git commit history for the project you’re working on (looks a\n          lot like recursion, huh?). You need to make many well-stated commits\n          while working on this project and regularly push them up.\n        </p>\n        <p>\n          You will need to sign up for a free GitHub account if you do not\n          already have one, then create a public repository to store your work\n          so that we will be able to see and review it. You can find\n          documentation on the GitHub API here:\n          <a href=\"https://developer.github.com/v3/\" target=\"_blank\">\n            https://developer.github.com/v3/\n          </a>\n        </p>\n        <p>\n          You can use the Angular, Vue, or React framework. We are currently\n          looking for candidates that know Angular or TypeScript.\n        </p>\n        <h2>Requirements</h2>\n        <ul>\n          <li>\n            You must use the GitHub API - while you could make a scraper or\n            devise another method to get the git commit history of your project,\n            we would like to see how you work with an existing API.\n          </li>\n          <li>\n            Your GitHub repository must be public - this will allow us to look\n            at it and verify the accuracy of your code.\n          </li>\n          <li>\n            The style of the page is up to you. Typically we use something like\n            Bootstrap (\n            <a href=\"http://getbootstrap.com\" target=\"_blank\">\n              http://getbootstrap.com\n            </a>\n            ) for a lot of our projects, then style it to meet the business want\n            or need later on.\n          </li>\n          <li>\n            The page does not need to be a real-time view (it’s okay for us to\n            refresh it to get the latest commits on your repository).\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext, useEffect, Fragment } from 'react'\nimport { GithubContext } from '../context/github/githubContext'\nimport { Link } from 'react-router-dom'\n\nexport const CommitInfo = ({ match }) => {\n  const { getCommit, loading, info } = useContext(GithubContext)\n  const urlSha = match.params.sha\n\n  useEffect(() => {\n    getCommit(urlSha)\n    // eslint-disable-next-line\n  }, [])\n\n  if (loading) {\n    return <p className=\"text-center\">Loading...</p>\n  }\n  const { sha } = info\n\n  return (\n    <Fragment>\n      <Link to=\"/\" className=\"btn btn-link\">\n        Back to list\n      </Link>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{sha}</h5>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n","import { createContext } from 'react'\n\nexport const AlertContext = createContext()\n","import React, { useContext } from 'react'\nimport { AlertContext } from '../context/alert/alertContext'\n\nexport const Alert = () => {\n  const { alert, hide } = useContext(AlertContext)\n\n  if (!alert) return null\n\n  return (\n    <div\n      className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\n      role=\"alert\"\n    >\n      {alert.text}\n      <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  )\n}\n","export const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\nexport const GET_COMMIT = 'GET_COMMIT'\nexport const GET_COMMITS = 'GET_COMMITS'\nexport const SET_LOADING = 'SET_LOADING'\n","import { HIDE_ALERT, SHOW_ALERT } from '../types'\n\nconst handlers = {\n  [SHOW_ALERT]: (state, action) => action.payload,\n  [HIDE_ALERT]: () => null,\n  DEFAULT: (state) => state,\n}\n\nexport const alertReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT\n  return handler(state, action)\n}\n","import React, { useReducer } from 'react'\nimport { AlertContext } from './alertContext'\nimport { alertReducer } from './alertReducer'\nimport { HIDE_ALERT, SHOW_ALERT } from '../types'\n\nexport const AlertState = ({ children }) => {\n  const [state, dispatch] = useReducer(alertReducer, null)\n\n  const hide = () => dispatch({ type: HIDE_ALERT })\n\n  const show = (text, type = 'secondary') => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: { type, text },\n    })\n  }\n\n  return (\n    <AlertContext.Provider\n      value={{\n        hide,\n        show,\n        alert: state,\n      }}\n    >\n      {children}\n    </AlertContext.Provider>\n  )\n}\n","import { GET_COMMITS, GET_COMMIT, SET_LOADING } from '../types'\n\nconst handlers = {\n  [GET_COMMITS]: (state, { payload }) => ({\n    ...state,\n    commits: payload,\n    loading: false,\n  }),\n  [GET_COMMIT]: (state, { payload }) => ({\n    ...state,\n    info: payload,\n    loading: false,\n  }),\n  [SET_LOADING]: (state) => ({ ...state, loading: true }),\n  DEFAULT: (state) => state,\n}\n\nexport const githubReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT\n  return handler(state, action)\n}\n","import React, { useReducer } from 'react'\nimport axios from 'axios'\nimport { GithubContext } from './githubContext'\nimport { githubReducer } from './githubReducer'\nimport { GET_COMMITS, GET_COMMIT, SET_LOADING } from '../types'\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\n\nconst withCreds = (url) => {\n  return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\n}\n\nexport const GithubState = ({ children }) => {\n  const initialState = {\n    info: {},\n    commits: [],\n    loading: false,\n  }\n\n  const [state, dispatch] = useReducer(githubReducer, initialState)\n\n  const getCommit = async (ref) => {\n    setLoading()\n\n    const response = await axios.get(\n      withCreds(\n        `https://api.github.com/repos/fomazov/github-commits/commits/${ref}?`,\n      ),\n    )\n\n    dispatch({\n      type: GET_COMMIT,\n      payload: response.data,\n    })\n  }\n\n  const getCommits = async () => {\n    setLoading()\n\n    const response = await axios.get(\n      withCreds('https://api.github.com/repos/fomazov/github-commits/commits?'),\n    )\n\n    dispatch({\n      type: GET_COMMITS,\n      payload: response.data,\n    })\n  }\n\n  const setLoading = () => dispatch({ type: SET_LOADING })\n\n  const { info, commits, loading } = state\n\n  return (\n    <GithubContext.Provider\n      value={{\n        setLoading,\n        getCommit,\n        getCommits,\n        info,\n        commits,\n        loading,\n      }}\n    >\n      {children}\n    </GithubContext.Provider>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Navbar } from './components/Navbar'\nimport { Home } from './pages/Home'\nimport { About } from './pages/About'\nimport { CommitInfo } from './pages/CommitInfo'\nimport { Alert } from './components/Alert'\nimport { AlertState } from './context/alert/AlertState'\nimport { GithubState } from './context/github/githubState'\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert alert={{ text: 'Test alert' }} />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/commit/:sha\" component={CommitInfo} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}